@using ProgrammersBlog.Shared.Utilities.Results.ComplexTypes
@model ProgrammersBlog.Entities.Dtos.UserListDto
@{
    Layout = "_Layout";
    ViewBag.Title = "Kullancılar Index";
}
@if (Model.ResultStatus == ResultStatus.Success)
{
    <div id="modelPlaceHolder" aria-hidden="true"></div>
    <div class="card mb-4 mt-2">
        <div class="card-header">
            <i class="fas fa-table mr-1"></i>
           Kullancılar
        </div>
        <div class="card-body">
            <div class="spinner-border" role="status" style="display:none;">
                <span class="sr-only">Yükleniyor...</span>
            </div>
            <div class="table-responsive">
                <table class="table table-bordered" id="usersTable" width="100%" cellspacing="0">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Kullanıcı Adı</th>
                            <th>E-Posta Adresi</th>
                            <th>Telefon Numarası</th>
                            <th>Resim</th>
                            <th>İşlemler</th>

                        </tr>
                    </thead>
                    <tfoot>
                        <tr>
                            <th>ID</th>
                            <th>Kullanıcı Adı</th>
                            <th>E-Posta Adresi</th>
                            <th>Telefon Numarası</th>
                            <th>Resim</th>
                            <th>İşlemler</th>
                        </tr>
                    </tfoot>
                    <tbody>
                        @foreach (var user in Model.Users)
                        {
                            <tr name="@user.Id">
                                <td>@user.Id</td>
                                <td>@user.UserName</td>
                                <td>@user.Email</td>
                                <td>@user.PhoneNumber</td>
                                <td><img src="~/img/@user.Picture" alt="@user.UserName"  class="my-image-table"/></td>
                              
                                <td>
                                    <button class="btn btn-primary btn-sm btn-block btn-update" data-id="@user.Id"><span class="fas fa-edit"></span></button>
                                    <button class="btn btn-danger btn-sm btn-block btn-delete" data-id="@user.Id"><span class="fas fa-minus-circle"></span></button>
                                </td>

                            </tr>

                        }


                    </tbody>
                </table>
            </div>
        </div>
    </div>

}
@if (Model.ResultStatus == ResultStatus.Error)
{
    <div class="alert alert-danger mt-3">
        @Model.Message<br />
        Dashboard Sayfasına geri dönmek için lütfen <a class="alert-link" asp-area="Admin" asp-controller="Home" asp-action="Index">tıklayınız</a>
    </div>
}
@section Scripts
    {
        <script>
        $(document).ready(function () {


           const dataTable =  $('#usersTable').DataTable({
                dom:
                    "<'row'<'col-sm-3'l><'col-sm-6 text-center'B><'col-sm-3'f>>" +
                    "<'row'<'col-sm-12'tr>>" +
                    "<'row'<'col-sm-5'i><'col-sm-7'p>>",
                buttons: [
                    {
                        text: 'Ekle',
                        attr: {
                            id: "btnAdd",
                        },

                        className: 'btn btn-success',
                        action: function (e, dt, node, config) {


                        }
                    },
                    {
                        text: 'Yenile',
                        className: 'btn btn-warning',
                        action: function (e, dt, node, config) {
                            $.ajax({
                                type: 'GET',
                                url: '@Url.Action("GetAllUsers","User")',
                                //url :'google.com',
                                contentType: "application/json",
                                beforeSend: function () {
                                    $('#usersTable').hide();
                                    $('.spinner-border').show();


                                },
                                success: function (data) {
                                    const userListDto = jQuery.parseJSON(data);
                                    dataTable.clear();
                                    if (userListDto.ResultStatus === 0) {
                                        

                                        $.each(userListDto.Users.$values, function (index, user) {
                                        const newTableRow=dataTable.row.add([
                                                user.Id,
                                                user.UserName,
                                                user.Email,
                                                user.PhoneNumber,
                                                `<img src="/img/${user.Picture}" alt = "${user.UserName}" class="my-image-table"/>`,
                                                `<button class="btn btn-primary btn-sm btn-block btn-update" data-id="${user.Id}"><span class="fas fa-edit"></span></button>
                                                <button class="btn btn-danger btn-sm btn-block btn-delete" data-id="${user.Id}"><span class="fas fa-minus-circle"></span></button>
                                                 `


                                            ]).node();
                                            const jqueryTableRow = $(newTableRow);
                                            jqueryTableRow.attr('name',`${user.Id}`);


                                        });

                                        dataTable.draw();
                                        $('.spinner-border').hide();
                                        $('#usersTable').fadeIn(1400);
                                    } else {
                                        toastr.error(`${userListDto.Message}`, 'İşlem Başarısız!');
                                    }
                                },
                                error: function (err) {
                                    console.log(err);
                                    $('.spinner-border').hide();
                                    $('#usersTable').fadeIn(1000);
                                    toastr.error(`${err.responseText}`, 'Hata!');


                                }
                            });


                        }
                    }
                ],

                language: {
                    "sDecimal": ",",
                    "sEmptyTable": "Tabloda herhangi bir veri mevcut değil",
                    "sInfo": "_TOTAL_ kayıttan _START_ - _END_ arasındaki kayıtlar gösteriliyor",
                    "sInfoEmpty": "Kayıt yok",
                    "sInfoFiltered": "(_MAX_ kayıt içerisinden bulunan)",
                    "sInfoPostFix": "",
                    "sInfoThousands": ".",
                    "sLengthMenu": "Sayfada _MENU_ kayıt göster",
                    "sLoadingRecords": "Yükleniyor...",
                    "sProcessing": "İşleniyor...",
                    "sSearch": "Ara:",
                    "sZeroRecords": "Eşleşen kayıt bulunamadı",
                    "oPaginate": {
                        "sFirst": "İlk",
                        "sLast": "Son",
                        "sNext": "Sonraki",
                        "sPrevious": "Önceki"
                    },
                    "oAria": {
                        "sSortAscending": ": artan sütun sıralamasını aktifleştir",
                        "sSortDescending": ": azalan sütun sıralamasını aktifleştir"
                    },
                    "select": {
                        "rows": {
                            "_": "%d kayıt seçildi",
                            "0": "",
                            "1": "1 kayıt seçildi"
                        }
                    }


                }



            });
            //datatables end here and added user
            $(function () {
                const url = '@Url.Action("Add","User")';
                const placeHolderDiv = $('#modelPlaceHolder');
                $('#btnAdd').click(function () {
                    $.get(url).done(function (data) {
                        placeHolderDiv.html(data);
                        placeHolderDiv.find(".modal").modal('show');
                    });
                });

                //ajax post  /posting FormData as useraddto strats fromhere

                placeHolderDiv.on('click', '#btnSave',
                    function (event) {
                        event.preventDefault();
                        const form = $('#form-user-add');
                        const actionUrl = form.attr('action');
                        const dataToSend = new FormData(form.get(0));
                        console.log(actionUrl);
                        $.ajax({
                            url: actionUrl,
                            type : 'POST',
                            data: dataToSend,
                            processData:false,
                            contentType: false,
                            success:function (data) {
                            console.log(data);
                            const userAddAjaxModel = jQuery.parseJSON(data);
                            console.log(userAddAjaxModel);
                            const newFormBody = $('.modal-body', userAddAjaxModel.UserAddPartial);
                            placeHolderDiv.find('.modal-body').replaceWith(newFormBody);
                            const isValid = newFormBody.find('[name ="IsValid"]').val() === 'True';
                            if (isValid) {
                                placeHolderDiv.find('.modal').modal('hide');
                                    const newTableRow = dataTable.row.add([
                                        userAddAjaxModel.UserDto.User.Id,
                                        userAddAjaxModel.UserDto.User.UserName,
                                        userAddAjaxModel.UserDto.User.Email,
                                        userAddAjaxModel.UserDto.User.PhoneNumber,
                                        `<img src="/img/${userAddAjaxModel.UserDto.User.Picture}" alt = "${userAddAjaxModel.UserDto.User.UserName}" class="my-image-table" />` ,
                                        `<button class="btn btn-primary btn-sm btn-block btn-update" data-id="${userAddAjaxModel.UserDto.User.Id}"><span class="fas fa-edit"></span></button>
                                         <button class="btn btn-danger btn-sm btn-block btn-delete" data-id="${userAddAjaxModel.UserDto.User.Id}"><span class="fas fa-minus-circle"></span></button>
                                        `

                                
                                ]).node();
                                    const jqueryTableRow = $(newTableRow);
                                    jqueryTableRow.attr('name', `${userAddAjaxModel.UserDto.User.Id}`);
                                    dataTable.row(newTableRow).draw();
                                    toastr.success(`${userAddAjaxModel.UserDto.Message}`, 'Başarılı İşlem!');
                                 } 
                                 else 
                                 {
                                let summaryText = "";
                                $('#validation-summary > ul>li').each(function () {
                                    let text = $(this).text();
                                    summaryText = `*${text}\n`;

                                });
                                toastr.warning(summaryText);
                            }
                            },

                            error:function(err){
                            console.log(err);
                            }
                        });


                    });

            });

            //deleted user
            $(document).on('click', '.btn-delete', function (event) {
                event.preventDefault();/* butonun kenid içerisinde bir işlevselliği varsa bunu iptal eder*/
                const id = $(this).attr('data-id');
                const tableRow = $(`[name="${id}"]`);
                const userName = tableRow.find('td:eq(1)').text();

                Swal.fire({
                    title: 'Silmek İstediğinize Emin misiniz?',
                    text: `${userName} adlı kullanıcı Silinecektir`,
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Evet, Silmek istiyorum!',
                    cancelButtonText: 'Hayır,Silmek istemiyorum!'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            type: 'POST',
                            dataType: 'json',
                            data: { userId: id },
                            url: '@Url.Action("Delete","User")',
                            success: function (data) {
                                const userDto = jQuery.parseJSON(data);
                                if (userDto.ResultStatus === 0) {
                                    Swal.fire(
                                        'Silindi!',
                                        `${userDto.User.UserName} adlı kullanıcı başarıyla silinmiştir.`,
                                        'success'
                                    );


                                    dataTable.row(tableRow).remove().draw();

                                } else {
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Başarısız İşlem',
                                        text: `${userDto.Message}`,

                                    });
                                }

                            },
                            error: function (err) {
                                console.log(err);
                                toastr.error(`${err.responseText}`, "Hata");
                            },

                        });
                    }
                });


            });
            //update user işlemi
            $(function () {
                const url = '@Url.Action("Update","User")';
                const placeHolderDiv = $('#modelPlaceHolder');
                $(document).on('click', '.btn-update', function (event) {
                    event.preventDefault();
                    const Id = $(this).attr('data-id');
                    $.get(url, { userId: Id }).done(function (data) {

                        placeHolderDiv.html(data);
                        placeHolderDiv.find('.modal').modal('show');

                    }).fail(function () {
                        toastr.error("Bir hata oluştu");
                    });

                });

                //ajax post updating  a user starts from here

                placeHolderDiv.on('click',
                    '#btnUpdate',
                    function (event) {
                        event.preventDefault();
                        const form = $('#form-user-update');
                        const actionUrl = form.attr('action');
                        const dataToSend = new FormData(form.get(0));
                        console.log(dataToSend);
                        console.log(actionUrl);
                        $.ajax({
                            url: actionUrl,
                            type : 'POST',
                            data: dataToSend,
                            processData:false,
                            contentType: false,
                            success:function (data) {
                            const  userUpdateAjaxModel = jQuery.parseJSON(data);
                            console.log(userUpdateAjaxModel);
                            const id = userUpdateAjaxModel.UserDto.User.Id;
                            const tableRow =$(`[name="${id}"]`);
                            const newFormBody = $('.modal-body', userUpdateAjaxModel.UserUpdatePartial);
                            placeHolderDiv.find('.modal-body').replaceWith(newFormBody);
                            const isValid = newFormBody.find('[name="IsValid"]').val() === 'True';
                            if (isValid) {
                                placeHolderDiv.find('.modal').modal('hide');
                                    dataTable.row(tableRow).data([
                                        userUpdateAjaxModel.UserDto.User.Id,
                                        userUpdateAjaxModel.UserDto.User.UserName,
                                        userUpdateAjaxModel.UserDto.User.Email,
                                        userUpdateAjaxModel.UserDto.User.PhoneNumber,
                                        `<img src="/img/${userUpdateAjaxModel.UserDto.User.Picture}" alt = "${userUpdateAjaxModel.UserDto.User.UserName}" class="my-image-table" />`,
                                        `<button class="btn btn-primary btn-sm btn-block btn-update" data-id="${userUpdateAjaxModel.UserDto.User.Id}"><span class="fas fa-edit"></span></button>
                                                         <button class="btn btn-danger btn-sm btn-block btn-delete" data-id="${userUpdateAjaxModel.UserDto.User.Id}"><span class="fas fa-minus-circle"></span></button>
                                                `


                                    ]);
                                    tableRow.attr("name",`${id}`);
                                    dataTable.row(tableRow).invalidate();


                                    toastr.success(`${userUpdateAjaxModel.UserDto.User.Message}`, "Başarılı İşlem!");


                            } else {
                                let summaryText = "";
                                $('#validation-summary > ul>li').each(function () {
                                    let text = $(this).text();
                                    summaryText = `*${text}\n`;

                                });
                                toastr.warning(summaryText);

                            }

                          },
                          error:function(error){
                              console.log(error);
                          
                          }


                        });



                    });
            });
        });


        


        </script>
 


}